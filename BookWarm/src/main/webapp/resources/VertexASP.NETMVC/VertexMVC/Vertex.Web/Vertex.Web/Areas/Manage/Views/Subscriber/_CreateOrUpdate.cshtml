@model SubscriberModel

@{
    bool isNew = !(Model != null && Model.Id > 0);
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">
                <i class="fas fa-pencil-alt mr-3 fs-14"></i>
                @Html.LabelFor(x => x.Email, new { @class = "m-0 fs-14" })
            </span>
        </div>
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
    </div>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">
                <i class="fas fa-pencil-alt mr-3 fs-14"></i>
                @Html.LabelFor(x => x.FullName, new { @class = "m-0 fs-14" })
            </span>
        </div>
        @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">
                        <i class="fas fa-pencil-alt mr-3 fs-14"></i>
                        @Html.LabelFor(x => x.SubscribeDate, new { @class = "m-0 fs-14" })
                    </span>
                </div>
                <div class="form-control p-0">
                    @Html.EditorFor(x => x.SubscribeDate, new { pickTime = true, @disabled = true, @class = "form-control" })
                </div>
            </div>

        </div>
        @if (Model.UnsubscribeDate != null)
        {
            <div class="col-md-6">
                <div class="input-group disabled mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            <i class="fa fa-calendar-alt mr-3 fs-14"></i>
                            @Html.LabelFor(x => x.UnsubscribeDate, new { @class = "m-0 fs-14" })
                        </span>
                    </div>
                    @Html.TextBoxFor(x => x.UnsubscribeDate, new { @class = "form-control", @disabled = true })
                </div>
            </div>
        }
    </div>

    <div class="form-group">
        <div class="custom-control custom-checkbox">
            @Html.CheckBoxFor(m => m.IsActive, new { @class = "custom-control-input" })
            @Html.LabelFor(m => m.IsActive, new { @class = "custom-control-label" })
        </div>
    </div>

    <div class="form-group mt-4 pt-4 border-top">
        <button type="submit" name="action:@(isNew ? "Create": "Edit")" class="btn btn-primary btn-sm btn-wide transition-hover mr-2">
            <i class="fa fa-save mr-1 fs-14"></i> Save
        </button>

        @if (!isNew)
        {
            @(Html.Vertex().ConfirmModal("Delete", "Subscriber", new { @id = Model.Id })
                 .Title("Confirm Delete")
                 .Content("Are you sure do you want to delete ?")
                 .For(Html.Vertex().Button().Text("Delete").Color(BootstrapColor.Secondary).Size(ButtonSize.Small))
            )
        }

        <div class="d-inline-block">
            <span class="mx-2 text-light font-weight-light fs-15">or</span>
            <i class="fas fa-long-arrow-alt-left fs-13 text-primary o-8"></i>
            <a href="@Url.Action("List", "Subscriber")" class="m-link fs-15"> Back to list</a>
        </div>
    </div>   
}