@model JobModel

@{ bool isNew = !(Model != null && Model.Id > 0); }

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <ul class="nav nav-pills" id="component-1" role="tablist">
        <li class="nav-item">
            <a class="nav-link active show" data-toggle="tab" href="#component-1-1" role="tab" aria-controls="component-1-1" aria-selected="true">
                <i class="fas fa-pencil-alt fs-14 mr-1"></i> General
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#component-1-2" role="tab" aria-controls="component-1-2" aria-selected="false">
                <i class="fa fa-list fs-14 mr-1"></i> Apply Jobs <span class="badge badge-warning">@Model.ApplyJobCount </span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#component-1-3" role="tab" aria-controls="component-1-3" aria-selected="false">
                <i class="fa fa-info-circle fs-14 mr-1"></i> Info
            </a>
        </li>
    </ul> 

    <div class="tab-content mt-4" id="component-1-content">
        <div class="tab-pane fade show active" id="component-1-1" role="tabpanel" aria-labelledby="component-1-1">

            <div class="row">

                <div class="col-md-12">
                    @if (!isNew)
                    {
                        <div class="mb-4">
                            @Html.LabelFor(x => x.Url, new { @class = "m-0 fs-14 mr-2" })
                            <a href="@Model.Url" target="_blank" class="m-link">@Model.Url</a> <i class="fas fa-external-link-alt ml-1 fs-13 text-primary"></i>
                        </div>
                    }

                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                <i class="fas fa-pencil-alt mr-3 fs-14"></i>
                                @Html.LabelFor(x => x.Title, new { @class = "m-0 fs-14" })
                            </span>
                        </div>
                        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <span class="text-danger">@Html.ValidationMessageFor(x => x.Description)</span>
                        @Html.Vertex().HtmlEditorFor(x => x.Description)
                    </div>


                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="fas fa-pencil-alt mr-3 fs-14"></i>
                                        @Html.LabelFor(x => x.CategoryId, new { @class = "m-0 fs-14" })
                                    </span>
                                </div>
                                @Html.DropDownListFor(x => x.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "Select Category", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="fa fa-eye mr-3 fs-14"></i>
                                        @Html.LabelFor(x => x.WorkType, new { @class = "m-0 fs-14" })
                                    </span>
                                </div>
                                @Html.DropDownListFor(x => x.WorkType, new SelectList(Model.AvailableWorkTypes), "Select", new { @class = "form-control", })
                            </div>
                        </div>
                    </div>

                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"> 
                                <i class="fas fa-street-view mr-3 fs-14"></i>
                                @Html.LabelFor(x => x.Location, new { @class = "m-0 fs-14" })
                            </span>
                        </div>
                        @Html.TextBoxFor(x => x.Location, new { @class = "form-control" })
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group disabled mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="fa fa-calendar-alt mr-3 fs-14"></i>
                                        @Html.LabelFor(x => x.CreateDate, new { @class = "m-0 fs-14" })
                                    </span>
                                </div>
                                @Html.TextBoxFor(x => x.CreateDate, new { @class = "form-control", @disabled = true })
                            </div>
                        </div>
                        @if (!isNew)
                        {
                            <div class="col-md-6">
                                <div class="input-group disabled mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="fa fa-calendar-alt mr-3 fs-14"></i>
                                            @Html.LabelFor(x => x.UpdateDate, new { @class = "m-0 fs-14" })
                                        </span>
                                    </div>
                                    @Html.TextBoxFor(x => x.UpdateDate, new { @class = "form-control", @disabled = true })
                                </div>
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(m => m.IsActive, new { @class = "custom-control-input" })
                                    @Html.LabelFor(m => m.IsActive, new { @class = "custom-control-label" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-offset-2 col-sm-10">
                            <div class="form-group"> 
                                <div class="form-group mt-4 pt-4 border-top">
                                    <button type="submit" name="action:@(isNew ? "Create": "Edit")" class="btn btn-primary btn-sm btn-wide transition-hover mr-2">
                                        <i class="fa fa-save mr-1 fs-14"></i> Save
                                    </button>

                                    @if (!isNew)
                                    {
                                        @(Html.Vertex().ConfirmModal("Delete", "Job", new { @id = Model.Id })
                                                    .Title("Confirm Delete")
                                                    .Content("Are you sure do you want to delete ?")
                                                    .For(Html.Vertex().Button().Text("Delete").Color(BootstrapColor.Secondary).Size(ButtonSize.Small))
                                        )
                                    }

                                    <div class="d-inline-block">
                                        <span class="mx-2 text-light font-weight-light fs-15">or</span>
                                        <i class="fas fa-long-arrow-alt-left fs-13 text-primary o-8"></i>
                                        <a href="@Url.Action("List", "Job")" class="m-link fs-15">  Back to list</a>
                                    </div>
                                </div>  
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="component-1-2" role="tabpanel" aria-labelledby="component-1-2">
            <div class="row"> 
                <div class="col-md-12">
                    
                @(Html.Telerik().Grid<ApplyJobModel>()
                     .Name("ApplyJobModel-grid")
                     .BindTo(Model.ApplyJobs)
                     .Columns(columns =>
                     {
                            columns.Bound(x => x.FullName).Width(300).Template(x => Html.ActionLink(x.FullName, "Edit", "ApplyJob", new { id = x.Id }, new { }));
                            columns.Bound(x => x.Email);
                            columns.Bound(x => x.IsActive).Centered().Template(item => @Html.SymbolForBool(item.IsActive)).ClientTemplate(@Html.SymbolForBool("Published"));
                            columns.Bound(x => x.ApplyDate);
                            columns.Bound(x => x.Id)
                                            .Template(x => Html.ActionLink("View", "ApplyJobEdit", new { id = x.Id }, new { @class = "t-button" }))
                                            .ClientTemplate("<a href=\"ApplyJob/Edit/<#= Id #>\" class=\"t-button\">Edit</a>")
                                            .Title(String.Empty).Width(100)
                                            .HtmlAttributes(new { align = "right", @class = "omega" });
                     }).Pageable(settings => settings.Total(Model.ApplyJobCount).PageSize(15).Position(GridPagerPosition.Both))
                )
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="component-1-3" role="tabpanel" aria-labelledby="component-1-3">
            <div class="row">
                <div class="col-md-12">
                    <p>
                        View Count: <strong class="text-dark">@Model.ViewCount</strong>
                    </p>
                </div>
            </div>
        </div>

    </div>
}
